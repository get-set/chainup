# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_main_frame.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(809, 680)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/images/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("/*global font*/\n"
"QWidget {\n"
"    font-family: \"Microsoft YaHei UI\";\n"
"    font-size: 14px;\n"
"    color: rgb(51,51,51);\n"
"}\n"
"QWidget:selected {\n"
"    font-style: bold;\n"
"    color: rgb(51,51,51);\n"
"}\n"
"QWidget:disabled {\n"
"    color: rgb(153,153,153);\n"
"}\n"
"\n"
"/* sidebar */\n"
"QWidget#sidebar {\n"
"    background-color: rgb(243,243,245);\n"
"    border-right-width: 1px;\n"
"    min-width: 140px;\n"
"}\n"
"QWidget#sidebar QListView {\n"
"    show-decoration-selected: 1;\n"
"    background-color: rgb(243,243,245);\n"
"    margin-right: 1px;\n"
"}\n"
"QWidget#sidebar QListWidget#nav_process {\n"
"    min-height:280px;\n"
"}\n"
"QWidget#sidebar QListWidget#nav_menu {\n"
"    min-height:120px;\n"
"}\n"
"QWidget#sidebar QListView::item {\n"
"    border: 0px;\n"
"    min-height: 40px;\n"
"    padding-left: 20px;\n"
"} \n"
"QWidget#sidebar QListView::item:selected {\n"
"    background-color: rgb(221,221,225);\n"
"    border-right-width: 4px;\n"
"    border-style: solid;\n"
"    border-color: rgb(160,160,160);\n"
"}  \n"
"QWidget#sidebar QListView::item:hover {\n"
"    background-color: rgb(232,232,235);\n"
"}\n"
"\n"
"/* main content */\n"
"QWidget#main_content {\n"
"    background-color: white;\n"
"}\n"
"QWidget#main_content QTextBrowser {\n"
"    border: none;\n"
"}\n"
"QStackedWidget#stacked_pages > QWidget {\n"
"    background-color: white;\n"
"}\n"
"\n"
"/* QGroupBox */\n"
"QGroupBox {\n"
"    border-width:1px;\n"
"    padding: 20 10 10 10px;\n"
"}\n"
"QGroupBox::title {\n"
"    padding: 0px 3px;\n"
"    background-color: qlineargradient(x1: 0, y1: 0, x2: 1, y2: 1, stop: 0 #999999, stop: 1 #FFFFFF);\n"
"}\n"
"\n"
"/* page_3 */\n"
"QPlainTextEdit#host_info {\n"
"    font-family: \"Consolas\";\n"
"    font-size: 12px;\n"
"    background-color: rgb(243,243,245);\n"
"}\n"
"\n"
"/* page_4 */\n"
"QWidget[class=\'check\'] {\n"
"    border: 2px solid gray;\n"
"    border-radius: 4px;\n"
"    padding: 0px;\n"
"    min-width: 80px;\n"
"}\n"
"\n"
"QPlainTextEdit#checking_log, QPlainTextEdit#deployment_log {\n"
"    font-family: \"Consolas\";\n"
"    font-size: 10px;\n"
"    background-color: rgb(243,243,245);\n"
"}\n"
"\n"
"/* copy right */\n"
"QLabel#copyright {\n"
"    background-color: rgb(242,242,242);\n"
"    font-size: 12px;\n"
"}\n"
"\n"
"/* buttons */\n"
"QPushButton {\n"
"    background-color: rgb(243,243,245);\n"
"    border: 1px solid rgb(160,160,160);\n"
"    min-width: 100px;\n"
"    min-height: 20px;\n"
"    padding: 4px;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(232,232,235);\n"
"    border-style: outset;\n"
"    padding-left: 3px;\n"
"    padding-top: 3px;\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: rgb(221,221,225);\n"
"    border-style: inset;\n"
"    padding-left: 5px;\n"
"    padding-top: 5px;\n"
"}\n"
"\n"
"\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.sidebar = QtWidgets.QWidget(self.centralwidget)
        self.sidebar.setObjectName("sidebar")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.sidebar)
        self.verticalLayout.setContentsMargins(0, 20, 0, 20)
        self.verticalLayout.setObjectName("verticalLayout")
        self.nav_process = QtWidgets.QListWidget(self.sidebar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nav_process.sizePolicy().hasHeightForWidth())
        self.nav_process.setSizePolicy(sizePolicy)
        self.nav_process.setFocusPolicy(QtCore.Qt.NoFocus)
        self.nav_process.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.nav_process.setObjectName("nav_process")
        item = QtWidgets.QListWidgetItem()
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/images/start.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item.setIcon(icon1)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.nav_process.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/images/scheme.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item.setIcon(icon2)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsUserCheckable)
        self.nav_process.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/images/input.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item.setIcon(icon3)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsUserCheckable)
        self.nav_process.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/images/config.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item.setIcon(icon4)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsUserCheckable)
        self.nav_process.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/images/check.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item.setIcon(icon5)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsUserCheckable)
        self.nav_process.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/images/deploy.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item.setIcon(icon6)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsUserCheckable)
        self.nav_process.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/images/finished.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item.setIcon(icon7)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsUserCheckable)
        self.nav_process.addItem(item)
        self.verticalLayout.addWidget(self.nav_process)
        spacerItem = QtWidgets.QSpacerItem(0, 1600, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.nav_menu = QtWidgets.QListWidget(self.sidebar)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nav_menu.sizePolicy().hasHeightForWidth())
        self.nav_menu.setSizePolicy(sizePolicy)
        self.nav_menu.setFocusPolicy(QtCore.Qt.NoFocus)
        self.nav_menu.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.nav_menu.setObjectName("nav_menu")
        item = QtWidgets.QListWidgetItem()
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/images/settings.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item.setIcon(icon8)
        self.nav_menu.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/images/help.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item.setIcon(icon9)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.nav_menu.addItem(item)
        item = QtWidgets.QListWidgetItem()
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/images/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        item.setIcon(icon10)
        item.setFlags(QtCore.Qt.ItemIsSelectable|QtCore.Qt.ItemIsUserCheckable|QtCore.Qt.ItemIsEnabled)
        self.nav_menu.addItem(item)
        self.verticalLayout.addWidget(self.nav_menu)
        self.verticalLayout.setStretch(0, 6)
        self.verticalLayout.setStretch(2, 1)
        self.horizontalLayout.addWidget(self.sidebar)
        self.main_content = QtWidgets.QWidget(self.centralwidget)
        self.main_content.setObjectName("main_content")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.main_content)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.stacked_pages = QtWidgets.QStackedWidget(self.main_content)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stacked_pages.sizePolicy().hasHeightForWidth())
        self.stacked_pages.setSizePolicy(sizePolicy)
        self.stacked_pages.setLineWidth(0)
        self.stacked_pages.setObjectName("stacked_pages")
        self.page_0 = QtWidgets.QWidget()
        self.page_0.setMaximumSize(QtCore.QSize(640, 600))
        self.page_0.setObjectName("page_0")
        self.verticalLayout_page_0 = QtWidgets.QVBoxLayout(self.page_0)
        self.verticalLayout_page_0.setContentsMargins(20, 20, 20, 20)
        self.verticalLayout_page_0.setSpacing(10)
        self.verticalLayout_page_0.setObjectName("verticalLayout_page_0")
        self.text_0 = QtWidgets.QTextBrowser(self.page_0)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_0.sizePolicy().hasHeightForWidth())
        self.text_0.setSizePolicy(sizePolicy)
        self.text_0.setOpenExternalLinks(True)
        self.text_0.setObjectName("text_0")
        self.verticalLayout_page_0.addWidget(self.text_0)
        self.stacked_pages.addWidget(self.page_0)
        self.page_1 = QtWidgets.QWidget()
        self.page_1.setObjectName("page_1")
        self.verticalLayout_pag_1 = QtWidgets.QVBoxLayout(self.page_1)
        self.verticalLayout_pag_1.setContentsMargins(20, 20, 20, 20)
        self.verticalLayout_pag_1.setSpacing(10)
        self.verticalLayout_pag_1.setObjectName("verticalLayout_pag_1")
        self.text_1 = QtWidgets.QTextBrowser(self.page_1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_1.sizePolicy().hasHeightForWidth())
        self.text_1.setSizePolicy(sizePolicy)
        self.text_1.setMaximumSize(QtCore.QSize(16777215, 75))
        self.text_1.setObjectName("text_1")
        self.verticalLayout_pag_1.addWidget(self.text_1)
        self.resource_type = QtWidgets.QGroupBox(self.page_1)
        self.resource_type.setObjectName("resource_type")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.resource_type)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.radio_res_type_host = QtWidgets.QRadioButton(self.resource_type)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radio_res_type_host.sizePolicy().hasHeightForWidth())
        self.radio_res_type_host.setSizePolicy(sizePolicy)
        self.radio_res_type_host.setChecked(True)
        self.radio_res_type_host.setObjectName("radio_res_type_host")
        self.horizontalLayout_2.addWidget(self.radio_res_type_host)
        self.radio_res_type_k8s = QtWidgets.QRadioButton(self.resource_type)
        self.radio_res_type_k8s.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radio_res_type_k8s.sizePolicy().hasHeightForWidth())
        self.radio_res_type_k8s.setSizePolicy(sizePolicy)
        self.radio_res_type_k8s.setCheckable(False)
        self.radio_res_type_k8s.setObjectName("radio_res_type_k8s")
        self.horizontalLayout_2.addWidget(self.radio_res_type_k8s)
        self.radio_res_type_swarm = QtWidgets.QRadioButton(self.resource_type)
        self.radio_res_type_swarm.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radio_res_type_swarm.sizePolicy().hasHeightForWidth())
        self.radio_res_type_swarm.setSizePolicy(sizePolicy)
        self.radio_res_type_swarm.setCheckable(False)
        self.radio_res_type_swarm.setObjectName("radio_res_type_swarm")
        self.horizontalLayout_2.addWidget(self.radio_res_type_swarm)
        self.verticalLayout_pag_1.addWidget(self.resource_type)
        self.deploy_scale = QtWidgets.QGroupBox(self.page_1)
        self.deploy_scale.setObjectName("deploy_scale")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.deploy_scale)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.radio_schema_test_single = QtWidgets.QRadioButton(self.deploy_scale)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radio_schema_test_single.sizePolicy().hasHeightForWidth())
        self.radio_schema_test_single.setSizePolicy(sizePolicy)
        self.radio_schema_test_single.setChecked(False)
        self.radio_schema_test_single.setObjectName("radio_schema_test_single")
        self.verticalLayout_3.addWidget(self.radio_schema_test_single)
        self.radio_schema_test_four = QtWidgets.QRadioButton(self.deploy_scale)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radio_schema_test_four.sizePolicy().hasHeightForWidth())
        self.radio_schema_test_four.setSizePolicy(sizePolicy)
        self.radio_schema_test_four.setChecked(True)
        self.radio_schema_test_four.setObjectName("radio_schema_test_four")
        self.verticalLayout_3.addWidget(self.radio_schema_test_four)
        self.radio_schema_prod_four = QtWidgets.QRadioButton(self.deploy_scale)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.radio_schema_prod_four.sizePolicy().hasHeightForWidth())
        self.radio_schema_prod_four.setSizePolicy(sizePolicy)
        self.radio_schema_prod_four.setObjectName("radio_schema_prod_four")
        self.verticalLayout_3.addWidget(self.radio_schema_prod_four)
        self.radio_schema_custom = QtWidgets.QRadioButton(self.deploy_scale)
        self.radio_schema_custom.setObjectName("radio_schema_custom")
        self.verticalLayout_3.addWidget(self.radio_schema_custom)
        self.custom1 = QtWidgets.QHBoxLayout()
        self.custom1.setContentsMargins(20, -1, -1, -1)
        self.custom1.setObjectName("custom1")
        self.label_4 = QtWidgets.QLabel(self.deploy_scale)
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.custom1.addWidget(self.label_4)
        self.custom_num_validator = QtWidgets.QSpinBox(self.deploy_scale)
        self.custom_num_validator.setMaximumSize(QtCore.QSize(40, 16777215))
        self.custom_num_validator.setMinimum(1)
        self.custom_num_validator.setMaximum(4)
        self.custom_num_validator.setObjectName("custom_num_validator")
        self.custom1.addWidget(self.custom_num_validator)
        self.label_5 = QtWidgets.QLabel(self.deploy_scale)
        self.label_5.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_5.setObjectName("label_5")
        self.custom1.addWidget(self.label_5)
        self.custom_num_non_validator = QtWidgets.QSpinBox(self.deploy_scale)
        self.custom_num_non_validator.setMaximumSize(QtCore.QSize(40, 16777215))
        self.custom_num_non_validator.setMaximum(4)
        self.custom_num_non_validator.setObjectName("custom_num_non_validator")
        self.custom1.addWidget(self.custom_num_non_validator)
        self.label_6 = QtWidgets.QLabel(self.deploy_scale)
        self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.custom1.addWidget(self.label_6)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.custom1.addItem(spacerItem1)
        self.verticalLayout_3.addLayout(self.custom1)
        self.custom2 = QtWidgets.QHBoxLayout()
        self.custom2.setContentsMargins(20, -1, -1, -1)
        self.custom2.setObjectName("custom2")
        self.label_7 = QtWidgets.QLabel(self.deploy_scale)
        self.label_7.setObjectName("label_7")
        self.custom2.addWidget(self.label_7)
        self.custom_num_ops = QtWidgets.QSpinBox(self.deploy_scale)
        self.custom_num_ops.setMaximumSize(QtCore.QSize(40, 16777215))
        self.custom_num_ops.setMinimum(1)
        self.custom_num_ops.setMaximum(3)
        self.custom_num_ops.setSingleStep(2)
        self.custom_num_ops.setObjectName("custom_num_ops")
        self.custom2.addWidget(self.custom_num_ops)
        self.label_9 = QtWidgets.QLabel(self.deploy_scale)
        self.label_9.setObjectName("label_9")
        self.custom2.addWidget(self.label_9)
        self.custom_num_explorer = QtWidgets.QSpinBox(self.deploy_scale)
        self.custom_num_explorer.setMinimum(1)
        self.custom_num_explorer.setMaximum(1)
        self.custom_num_explorer.setSingleStep(1)
        self.custom_num_explorer.setObjectName("custom_num_explorer")
        self.custom2.addWidget(self.custom_num_explorer)
        self.label_2 = QtWidgets.QLabel(self.deploy_scale)
        self.label_2.setObjectName("label_2")
        self.custom2.addWidget(self.label_2)
        self.label_10 = QtWidgets.QLabel(self.deploy_scale)
        self.label_10.setObjectName("label_10")
        self.custom2.addWidget(self.label_10)
        self.custom_num_caserver = QtWidgets.QSpinBox(self.deploy_scale)
        self.custom_num_caserver.setMaximumSize(QtCore.QSize(40, 16777215))
        self.custom_num_caserver.setMinimum(0)
        self.custom_num_caserver.setMaximum(1)
        self.custom_num_caserver.setSingleStep(1)
        self.custom_num_caserver.setObjectName("custom_num_caserver")
        self.custom2.addWidget(self.custom_num_caserver)
        self.label_12 = QtWidgets.QLabel(self.deploy_scale)
        self.label_12.setObjectName("label_12")
        self.custom2.addWidget(self.label_12)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.custom2.addItem(spacerItem2)
        self.verticalLayout_3.addLayout(self.custom2)
        self.verticalLayout_pag_1.addWidget(self.deploy_scale)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_pag_1.addItem(spacerItem3)
        self.stacked_pages.addWidget(self.page_1)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.page_2)
        self.verticalLayout_2.setContentsMargins(20, 20, 20, 20)
        self.verticalLayout_2.setSpacing(10)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.text_2 = QtWidgets.QTextBrowser(self.page_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_2.sizePolicy().hasHeightForWidth())
        self.text_2.setSizePolicy(sizePolicy)
        self.text_2.setMaximumSize(QtCore.QSize(16777215, 75))
        self.text_2.setObjectName("text_2")
        self.verticalLayout_2.addWidget(self.text_2)
        self.tool_buttons = QtWidgets.QHBoxLayout()
        self.tool_buttons.setObjectName("tool_buttons")
        self.btn_host_add_save = QtWidgets.QToolButton(self.page_2)
        self.btn_host_add_save.setEnabled(False)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/images/host_add_save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_host_add_save.setIcon(icon11)
        self.btn_host_add_save.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.btn_host_add_save.setAutoRaise(False)
        self.btn_host_add_save.setObjectName("btn_host_add_save")
        self.tool_buttons.addWidget(self.btn_host_add_save)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.tool_buttons.addItem(spacerItem4)
        self.btn_host_delete = QtWidgets.QToolButton(self.page_2)
        self.btn_host_delete.setEnabled(False)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/images/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_host_delete.setIcon(icon12)
        self.btn_host_delete.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.btn_host_delete.setObjectName("btn_host_delete")
        self.tool_buttons.addWidget(self.btn_host_delete)
        self.verticalLayout_2.addLayout(self.tool_buttons)
        self.hosts_info = QtWidgets.QHBoxLayout()
        self.hosts_info.setObjectName("hosts_info")
        self.formGroupBox = QtWidgets.QGroupBox(self.page_2)
        self.formGroupBox.setObjectName("formGroupBox")
        self.formLayout = QtWidgets.QFormLayout(self.formGroupBox)
        self.formLayout.setContentsMargins(0, 10, 0, 0)
        self.formLayout.setObjectName("formLayout")
        self.label_address = QtWidgets.QLabel(self.formGroupBox)
        self.label_address.setObjectName("label_address")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_address)
        self.host_address = QtWidgets.QLineEdit(self.formGroupBox)
        self.host_address.setClearButtonEnabled(True)
        self.host_address.setObjectName("host_address")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.host_address)
        self.label_user = QtWidgets.QLabel(self.formGroupBox)
        self.label_user.setObjectName("label_user")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_user)
        self.host_username = QtWidgets.QLineEdit(self.formGroupBox)
        self.host_username.setClearButtonEnabled(True)
        self.host_username.setObjectName("host_username")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.host_username)
        self.label_pass = QtWidgets.QLabel(self.formGroupBox)
        self.label_pass.setObjectName("label_pass")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_pass)
        self.host_password = QtWidgets.QLineEdit(self.formGroupBox)
        self.host_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.host_password.setClearButtonEnabled(True)
        self.host_password.setObjectName("host_password")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.host_password)
        self.label_ssh = QtWidgets.QLabel(self.formGroupBox)
        self.label_ssh.setObjectName("label_ssh")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_ssh)
        self.host_sshport = QtWidgets.QLineEdit(self.formGroupBox)
        self.host_sshport.setObjectName("host_sshport")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.host_sshport)
        self.label_note = QtWidgets.QLabel(self.formGroupBox)
        self.label_note.setObjectName("label_note")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_note)
        self.host_note = QtWidgets.QLineEdit(self.formGroupBox)
        self.host_note.setClearButtonEnabled(True)
        self.host_note.setObjectName("host_note")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.host_note)
        self.label_services = QtWidgets.QLabel(self.formGroupBox)
        self.label_services.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_services.setObjectName("label_services")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_services)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.host_deploy_ops = QtWidgets.QCheckBox(self.formGroupBox)
        self.host_deploy_ops.setObjectName("host_deploy_ops")
        self.gridLayout.addWidget(self.host_deploy_ops, 2, 0, 1, 1)
        self.host_deploy_nonvalidator = QtWidgets.QCheckBox(self.formGroupBox)
        self.host_deploy_nonvalidator.setObjectName("host_deploy_nonvalidator")
        self.gridLayout.addWidget(self.host_deploy_nonvalidator, 0, 1, 1, 1)
        self.host_deploy_validator = QtWidgets.QCheckBox(self.formGroupBox)
        self.host_deploy_validator.setObjectName("host_deploy_validator")
        self.gridLayout.addWidget(self.host_deploy_validator, 0, 0, 1, 1)
        self.host_deploy_explorer = QtWidgets.QCheckBox(self.formGroupBox)
        self.host_deploy_explorer.setObjectName("host_deploy_explorer")
        self.gridLayout.addWidget(self.host_deploy_explorer, 2, 1, 1, 1)
        self.host_deploy_caserver = QtWidgets.QCheckBox(self.formGroupBox)
        self.host_deploy_caserver.setObjectName("host_deploy_caserver")
        self.gridLayout.addWidget(self.host_deploy_caserver, 3, 0, 1, 1)
        self.formLayout.setLayout(5, QtWidgets.QFormLayout.FieldRole, self.gridLayout)
        self.label_info = QtWidgets.QLabel(self.formGroupBox)
        self.label_info.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_info.setObjectName("label_info")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.label_info)
        self.host_info = QtWidgets.QPlainTextEdit(self.formGroupBox)
        self.host_info.setReadOnly(True)
        self.host_info.setObjectName("host_info")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.host_info)
        self.hosts_info.addWidget(self.formGroupBox)
        self.hosts_list = QtWidgets.QListWidget(self.page_2)
        self.hosts_list.setAlternatingRowColors(True)
        self.hosts_list.setObjectName("hosts_list")
        self.hosts_info.addWidget(self.hosts_list)
        self.hosts_info.setStretch(0, 2)
        self.hosts_info.setStretch(1, 1)
        self.verticalLayout_2.addLayout(self.hosts_info)
        self.stacked_pages.addWidget(self.page_2)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.page_3)
        self.verticalLayout_5.setContentsMargins(20, 20, 20, 20)
        self.verticalLayout_5.setSpacing(10)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.text_3 = QtWidgets.QTextBrowser(self.page_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_3.sizePolicy().hasHeightForWidth())
        self.text_3.setSizePolicy(sizePolicy)
        self.text_3.setMaximumSize(QtCore.QSize(16777215, 75))
        self.text_3.setObjectName("text_3")
        self.verticalLayout_5.addWidget(self.text_3)
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.ops_info = QtWidgets.QGroupBox(self.page_3)
        self.ops_info.setObjectName("ops_info")
        self.formLayout_4 = QtWidgets.QFormLayout(self.ops_info)
        self.formLayout_4.setContentsMargins(0, 10, 0, 0)
        self.formLayout_4.setObjectName("formLayout_4")
        self.label_es_port = QtWidgets.QLabel(self.ops_info)
        self.label_es_port.setObjectName("label_es_port")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_es_port)
        self.ops_es_port = QtWidgets.QLineEdit(self.ops_info)
        self.ops_es_port.setClearButtonEnabled(True)
        self.ops_es_port.setObjectName("ops_es_port")
        self.formLayout_4.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.ops_es_port)
        self.label_kibana_port = QtWidgets.QLabel(self.ops_info)
        self.label_kibana_port.setObjectName("label_kibana_port")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_kibana_port)
        self.ops_kibana_port = QtWidgets.QLineEdit(self.ops_info)
        self.ops_kibana_port.setClearButtonEnabled(True)
        self.ops_kibana_port.setObjectName("ops_kibana_port")
        self.formLayout_4.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.ops_kibana_port)
        self.label_ops_onhosts = QtWidgets.QLabel(self.ops_info)
        self.label_ops_onhosts.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_ops_onhosts.setObjectName("label_ops_onhosts")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_ops_onhosts)
        self.ops_onhosts = QtWidgets.QListWidget(self.ops_info)
        self.ops_onhosts.setAlternatingRowColors(True)
        self.ops_onhosts.setObjectName("ops_onhosts")
        self.formLayout_4.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.ops_onhosts)
        self.label_es_data = QtWidgets.QLabel(self.ops_info)
        self.label_es_data.setObjectName("label_es_data")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_es_data)
        self.ops_monitor_home = QtWidgets.QLineEdit(self.ops_info)
        self.ops_monitor_home.setClearButtonEnabled(True)
        self.ops_monitor_home.setObjectName("ops_monitor_home")
        self.formLayout_4.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.ops_monitor_home)
        self.gridLayout_3.addWidget(self.ops_info, 0, 1, 1, 1)
        self.chain_info = QtWidgets.QGroupBox(self.page_3)
        self.chain_info.setObjectName("chain_info")
        self.formLayout_2 = QtWidgets.QFormLayout(self.chain_info)
        self.formLayout_2.setContentsMargins(0, 10, 0, 0)
        self.formLayout_2.setObjectName("formLayout_2")
        self.label_peer_port = QtWidgets.QLabel(self.chain_info)
        self.label_peer_port.setObjectName("label_peer_port")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_peer_port)
        self.chain_peer_port = QtWidgets.QLineEdit(self.chain_info)
        self.chain_peer_port.setClearButtonEnabled(True)
        self.chain_peer_port.setObjectName("chain_peer_port")
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.chain_peer_port)
        self.label_rpc_port = QtWidgets.QLabel(self.chain_info)
        self.label_rpc_port.setObjectName("label_rpc_port")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_rpc_port)
        self.chain_rpc_port = QtWidgets.QLineEdit(self.chain_info)
        self.chain_rpc_port.setClearButtonEnabled(True)
        self.chain_rpc_port.setObjectName("chain_rpc_port")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.chain_rpc_port)
        self.label_chain_proxy_app = QtWidgets.QLabel(self.chain_info)
        self.label_chain_proxy_app.setObjectName("label_chain_proxy_app")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_chain_proxy_app)
        self.chain_proxy_app = QtWidgets.QLineEdit(self.chain_info)
        self.chain_proxy_app.setPlaceholderText("")
        self.chain_proxy_app.setClearButtonEnabled(True)
        self.chain_proxy_app.setObjectName("chain_proxy_app")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.chain_proxy_app)
        self.label_chain_home = QtWidgets.QLabel(self.chain_info)
        self.label_chain_home.setObjectName("label_chain_home")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_chain_home)
        self.chain_home = QtWidgets.QLineEdit(self.chain_info)
        self.chain_home.setClearButtonEnabled(True)
        self.chain_home.setObjectName("chain_home")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.chain_home)
        self.label_chain_crypto = QtWidgets.QLabel(self.chain_info)
        self.label_chain_crypto.setObjectName("label_chain_crypto")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.label_chain_crypto)
        self.chain_crypto_sm = QtWidgets.QCheckBox(self.chain_info)
        self.chain_crypto_sm.setChecked(True)
        self.chain_crypto_sm.setObjectName("chain_crypto_sm")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.chain_crypto_sm)
        self.label_chain_onhosts = QtWidgets.QLabel(self.chain_info)
        self.label_chain_onhosts.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_chain_onhosts.setObjectName("label_chain_onhosts")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.label_chain_onhosts)
        self.chain_onhosts = QtWidgets.QListWidget(self.chain_info)
        self.chain_onhosts.setAlternatingRowColors(True)
        self.chain_onhosts.setObjectName("chain_onhosts")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.chain_onhosts)
        self.gridLayout_3.addWidget(self.chain_info, 0, 0, 2, 1)
        self.caserver_info = QtWidgets.QGroupBox(self.page_3)
        self.caserver_info.setObjectName("caserver_info")
        self.formLayout_6 = QtWidgets.QFormLayout(self.caserver_info)
        self.formLayout_6.setContentsMargins(0, 10, 0, 0)
        self.formLayout_6.setObjectName("formLayout_6")
        self.label_caserver_onhosts = QtWidgets.QLabel(self.caserver_info)
        self.label_caserver_onhosts.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_caserver_onhosts.setObjectName("label_caserver_onhosts")
        self.formLayout_6.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_caserver_onhosts)
        self.caserver_onhosts = QtWidgets.QListWidget(self.caserver_info)
        self.caserver_onhosts.setAlternatingRowColors(True)
        self.caserver_onhosts.setObjectName("caserver_onhosts")
        self.formLayout_6.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.caserver_onhosts)
        self.gridLayout_3.addWidget(self.caserver_info, 2, 0, 1, 1)
        self.explorer_info = QtWidgets.QGroupBox(self.page_3)
        self.explorer_info.setObjectName("explorer_info")
        self.formLayout_3 = QtWidgets.QFormLayout(self.explorer_info)
        self.formLayout_3.setContentsMargins(0, 10, 0, 0)
        self.formLayout_3.setObjectName("formLayout_3")
        self.label_explorer_port = QtWidgets.QLabel(self.explorer_info)
        self.label_explorer_port.setObjectName("label_explorer_port")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_explorer_port)
        self.explorer_port = QtWidgets.QLineEdit(self.explorer_info)
        self.explorer_port.setClearButtonEnabled(True)
        self.explorer_port.setObjectName("explorer_port")
        self.formLayout_3.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.explorer_port)
        self.label_exporer_onhosts = QtWidgets.QLabel(self.explorer_info)
        self.label_exporer_onhosts.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_exporer_onhosts.setObjectName("label_exporer_onhosts")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_exporer_onhosts)
        self.explorer_onhosts = QtWidgets.QListWidget(self.explorer_info)
        self.explorer_onhosts.setAlternatingRowColors(True)
        self.explorer_onhosts.setObjectName("explorer_onhosts")
        self.formLayout_3.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.explorer_onhosts)
        self.label_explorer_home = QtWidgets.QLabel(self.explorer_info)
        self.label_explorer_home.setObjectName("label_explorer_home")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_explorer_home)
        self.explorer_home = QtWidgets.QLineEdit(self.explorer_info)
        self.explorer_home.setObjectName("explorer_home")
        self.formLayout_3.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.explorer_home)
        self.gridLayout_3.addWidget(self.explorer_info, 1, 1, 2, 1)
        self.gridLayout_3.setColumnStretch(0, 1)
        self.gridLayout_3.setColumnStretch(1, 1)
        self.gridLayout_3.setRowStretch(0, 5)
        self.gridLayout_3.setRowStretch(1, 1)
        self.gridLayout_3.setRowStretch(2, 2)
        self.verticalLayout_5.addLayout(self.gridLayout_3)
        self.stacked_pages.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.page_4)
        self.verticalLayout_12.setContentsMargins(20, 20, 20, 20)
        self.verticalLayout_12.setSpacing(10)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.text_4 = QtWidgets.QTextBrowser(self.page_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_4.sizePolicy().hasHeightForWidth())
        self.text_4.setSizePolicy(sizePolicy)
        self.text_4.setMaximumSize(QtCore.QSize(16777215, 75))
        self.text_4.setObjectName("text_4")
        self.verticalLayout_12.addWidget(self.text_4)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.check_progress = QtWidgets.QProgressBar(self.page_4)
        self.check_progress.setProperty("value", 0)
        self.check_progress.setAlignment(QtCore.Qt.AlignCenter)
        self.check_progress.setTextVisible(False)
        self.check_progress.setObjectName("check_progress")
        self.horizontalLayout_7.addWidget(self.check_progress)
        self.btn_check_start = QtWidgets.QToolButton(self.page_4)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/images/start_checking.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.btn_check_start.setIcon(icon13)
        self.btn_check_start.setIconSize(QtCore.QSize(22, 22))
        self.btn_check_start.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.btn_check_start.setObjectName("btn_check_start")
        self.horizontalLayout_7.addWidget(self.btn_check_start)
        self.verticalLayout_12.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.check_jobs = QtWidgets.QVBoxLayout()
        self.check_jobs.setObjectName("check_jobs")
        self.horizontalLayout_9.addLayout(self.check_jobs)
        self.verticalLayout_11 = QtWidgets.QVBoxLayout()
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.checking_summary = QtWidgets.QListWidget(self.page_4)
        self.checking_summary.setObjectName("checking_summary")
        self.verticalLayout_11.addWidget(self.checking_summary)
        self.label = QtWidgets.QLabel(self.page_4)
        self.label.setObjectName("label")
        self.verticalLayout_11.addWidget(self.label)
        self.checking_log = QtWidgets.QPlainTextEdit(self.page_4)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(-1)
        self.checking_log.setFont(font)
        self.checking_log.setReadOnly(True)
        self.checking_log.setPlainText("")
        self.checking_log.setObjectName("checking_log")
        self.verticalLayout_11.addWidget(self.checking_log)
        self.verticalLayout_11.setStretch(0, 1)
        self.verticalLayout_11.setStretch(2, 1)
        self.horizontalLayout_9.addLayout(self.verticalLayout_11)
        self.verticalLayout_12.addLayout(self.horizontalLayout_9)
        self.stacked_pages.addWidget(self.page_4)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.page_5)
        self.verticalLayout_6.setContentsMargins(20, 20, 20, 20)
        self.verticalLayout_6.setSpacing(10)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.text_5 = QtWidgets.QTextBrowser(self.page_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_5.sizePolicy().hasHeightForWidth())
        self.text_5.setSizePolicy(sizePolicy)
        self.text_5.setMaximumSize(QtCore.QSize(16777215, 75))
        self.text_5.setObjectName("text_5")
        self.verticalLayout_6.addWidget(self.text_5)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.deployment_progress = QtWidgets.QProgressBar(self.page_5)
        self.deployment_progress.setProperty("value", 0)
        self.deployment_progress.setAlignment(QtCore.Qt.AlignCenter)
        self.deployment_progress.setTextVisible(False)
        self.deployment_progress.setObjectName("deployment_progress")
        self.horizontalLayout_8.addWidget(self.deployment_progress)
        self.btn_deployment_start = QtWidgets.QToolButton(self.page_5)
        self.btn_deployment_start.setIcon(icon13)
        self.btn_deployment_start.setIconSize(QtCore.QSize(22, 22))
        self.btn_deployment_start.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.btn_deployment_start.setObjectName("btn_deployment_start")
        self.horizontalLayout_8.addWidget(self.btn_deployment_start)
        self.verticalLayout_6.addLayout(self.horizontalLayout_8)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.deployment_jobs = QtWidgets.QVBoxLayout()
        self.deployment_jobs.setObjectName("deployment_jobs")
        self.horizontalLayout_10.addLayout(self.deployment_jobs)
        self.verticalLayout_13 = QtWidgets.QVBoxLayout()
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.deployment_summary = QtWidgets.QListWidget(self.page_5)
        self.deployment_summary.setObjectName("deployment_summary")
        self.verticalLayout_13.addWidget(self.deployment_summary)
        self.label_3 = QtWidgets.QLabel(self.page_5)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_13.addWidget(self.label_3)
        self.deployment_log = QtWidgets.QPlainTextEdit(self.page_5)
        self.deployment_log.setReadOnly(True)
        self.deployment_log.setObjectName("deployment_log")
        self.verticalLayout_13.addWidget(self.deployment_log)
        self.verticalLayout_13.setStretch(0, 1)
        self.verticalLayout_13.setStretch(2, 1)
        self.horizontalLayout_10.addLayout(self.verticalLayout_13)
        self.verticalLayout_6.addLayout(self.horizontalLayout_10)
        self.stacked_pages.addWidget(self.page_5)
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setObjectName("page_6")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.page_6)
        self.verticalLayout_8.setContentsMargins(20, 20, 20, 20)
        self.verticalLayout_8.setSpacing(10)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.text_6 = QtWidgets.QTextBrowser(self.page_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_6.sizePolicy().hasHeightForWidth())
        self.text_6.setSizePolicy(sizePolicy)
        self.text_6.setMaximumSize(QtCore.QSize(16777215, 75))
        self.text_6.setObjectName("text_6")
        self.verticalLayout_8.addWidget(self.text_6)
        self.deployment_finished = QtWidgets.QPlainTextEdit(self.page_6)
        self.deployment_finished.setObjectName("deployment_finished")
        self.verticalLayout_8.addWidget(self.deployment_finished)
        self.stacked_pages.addWidget(self.page_6)
        self.page_settings = QtWidgets.QWidget()
        self.page_settings.setObjectName("page_settings")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.page_settings)
        self.verticalLayout_10.setContentsMargins(20, 20, 20, 20)
        self.verticalLayout_10.setSpacing(10)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.text_8 = QtWidgets.QTextBrowser(self.page_settings)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_8.sizePolicy().hasHeightForWidth())
        self.text_8.setSizePolicy(sizePolicy)
        self.text_8.setMaximumSize(QtCore.QSize(16777215, 75))
        self.text_8.setObjectName("text_8")
        self.verticalLayout_10.addWidget(self.text_8)
        self.settings_group = QtWidgets.QWidget(self.page_settings)
        self.settings_group.setObjectName("settings_group")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.settings_group)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.label_offline_res_path = QtWidgets.QLabel(self.settings_group)
        self.label_offline_res_path.setObjectName("label_offline_res_path")
        self.gridLayout_5.addWidget(self.label_offline_res_path, 0, 0, 1, 1)
        self.settings_offline_res_path = QtWidgets.QLineEdit(self.settings_group)
        self.settings_offline_res_path.setObjectName("settings_offline_res_path")
        self.gridLayout_5.addWidget(self.settings_offline_res_path, 0, 1, 1, 1)
        self.settings_offline_res_path_browse_btn = QtWidgets.QToolButton(self.settings_group)
        self.settings_offline_res_path_browse_btn.setObjectName("settings_offline_res_path_browse_btn")
        self.gridLayout_5.addWidget(self.settings_offline_res_path_browse_btn, 0, 2, 1, 1)
        self.label_rpm_docker_path = QtWidgets.QLabel(self.settings_group)
        self.label_rpm_docker_path.setObjectName("label_rpm_docker_path")
        self.gridLayout_5.addWidget(self.label_rpm_docker_path, 1, 0, 1, 1)
        self.settings_rpm_docker_path = QtWidgets.QLineEdit(self.settings_group)
        self.settings_rpm_docker_path.setObjectName("settings_rpm_docker_path")
        self.gridLayout_5.addWidget(self.settings_rpm_docker_path, 1, 1, 1, 1)
        self.settings_rpm_docker_path_browse_btn = QtWidgets.QToolButton(self.settings_group)
        self.settings_rpm_docker_path_browse_btn.setObjectName("settings_rpm_docker_path_browse_btn")
        self.gridLayout_5.addWidget(self.settings_rpm_docker_path_browse_btn, 1, 2, 1, 1)
        self.label_rpm_ansible_path = QtWidgets.QLabel(self.settings_group)
        self.label_rpm_ansible_path.setObjectName("label_rpm_ansible_path")
        self.gridLayout_5.addWidget(self.label_rpm_ansible_path, 2, 0, 1, 1)
        self.settings_rpm_ansible_path = QtWidgets.QLineEdit(self.settings_group)
        self.settings_rpm_ansible_path.setObjectName("settings_rpm_ansible_path")
        self.gridLayout_5.addWidget(self.settings_rpm_ansible_path, 2, 1, 1, 1)
        self.settings_rpm_ansible_path_browse_btn = QtWidgets.QToolButton(self.settings_group)
        self.settings_rpm_ansible_path_browse_btn.setObjectName("settings_rpm_ansible_path_browse_btn")
        self.gridLayout_5.addWidget(self.settings_rpm_ansible_path_browse_btn, 2, 2, 1, 1)
        self.label_playbooks_path = QtWidgets.QLabel(self.settings_group)
        self.label_playbooks_path.setObjectName("label_playbooks_path")
        self.gridLayout_5.addWidget(self.label_playbooks_path, 3, 0, 1, 1)
        self.settings_playbooks_path = QtWidgets.QLineEdit(self.settings_group)
        self.settings_playbooks_path.setObjectName("settings_playbooks_path")
        self.gridLayout_5.addWidget(self.settings_playbooks_path, 3, 1, 1, 1)
        self.settings_playbooks_path_browse_btn = QtWidgets.QToolButton(self.settings_group)
        self.settings_playbooks_path_browse_btn.setObjectName("settings_playbooks_path_browse_btn")
        self.gridLayout_5.addWidget(self.settings_playbooks_path_browse_btn, 3, 2, 1, 1)
        self.label_monitor_path = QtWidgets.QLabel(self.settings_group)
        self.label_monitor_path.setObjectName("label_monitor_path")
        self.gridLayout_5.addWidget(self.label_monitor_path, 4, 0, 1, 1)
        self.settings_monitor_path = QtWidgets.QLineEdit(self.settings_group)
        self.settings_monitor_path.setObjectName("settings_monitor_path")
        self.gridLayout_5.addWidget(self.settings_monitor_path, 4, 1, 1, 1)
        self.settings_monitor_path_browse_btn = QtWidgets.QToolButton(self.settings_group)
        self.settings_monitor_path_browse_btn.setObjectName("settings_monitor_path_browse_btn")
        self.gridLayout_5.addWidget(self.settings_monitor_path_browse_btn, 4, 2, 1, 1)
        self.label_img_node_path = QtWidgets.QLabel(self.settings_group)
        self.label_img_node_path.setObjectName("label_img_node_path")
        self.gridLayout_5.addWidget(self.label_img_node_path, 5, 0, 1, 1)
        self.settings_img_node_path = QtWidgets.QLineEdit(self.settings_group)
        self.settings_img_node_path.setObjectName("settings_img_node_path")
        self.gridLayout_5.addWidget(self.settings_img_node_path, 5, 1, 1, 1)
        self.settings_img_node_path_browse_btn = QtWidgets.QToolButton(self.settings_group)
        self.settings_img_node_path_browse_btn.setObjectName("settings_img_node_path_browse_btn")
        self.gridLayout_5.addWidget(self.settings_img_node_path_browse_btn, 5, 2, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem5, 6, 0, 1, 1)
        self.verticalLayout_10.addWidget(self.settings_group)
        self.stacked_pages.addWidget(self.page_settings)
        self.page_help = QtWidgets.QWidget()
        self.page_help.setObjectName("page_help")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.page_help)
        self.verticalLayout_9.setContentsMargins(20, 20, 20, 20)
        self.verticalLayout_9.setSpacing(10)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.text_7 = QtWidgets.QTextBrowser(self.page_help)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.text_7.sizePolicy().hasHeightForWidth())
        self.text_7.setSizePolicy(sizePolicy)
        self.text_7.setOpenExternalLinks(True)
        self.text_7.setObjectName("text_7")
        self.verticalLayout_9.addWidget(self.text_7)
        self.stacked_pages.addWidget(self.page_help)
        self.verticalLayout_4.addWidget(self.stacked_pages)
        self.prev_next = QtWidgets.QHBoxLayout()
        self.prev_next.setContentsMargins(20, 10, 20, 10)
        self.prev_next.setSpacing(20)
        self.prev_next.setObjectName("prev_next")
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.prev_next.addItem(spacerItem6)
        self.btn_prev = QtWidgets.QPushButton(self.main_content)
        self.btn_prev.setObjectName("btn_prev")
        self.prev_next.addWidget(self.btn_prev)
        self.btn_next = QtWidgets.QPushButton(self.main_content)
        self.btn_next.setAutoDefault(True)
        self.btn_next.setDefault(True)
        self.btn_next.setObjectName("btn_next")
        self.prev_next.addWidget(self.btn_next)
        self.prev_next.setStretch(0, 20)
        self.prev_next.setStretch(1, 1)
        self.prev_next.setStretch(2, 1)
        self.verticalLayout_4.addLayout(self.prev_next)
        self.copyright = QtWidgets.QLabel(self.main_content)
        self.copyright.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.copyright.setObjectName("copyright")
        self.verticalLayout_4.addWidget(self.copyright)
        self.horizontalLayout.addWidget(self.main_content)
        self.horizontalLayout.setStretch(0, 1)
        self.horizontalLayout.setStretch(1, 4)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.nav_process.setCurrentRow(-1)
        self.stacked_pages.setCurrentIndex(6)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.text_4, self.radio_res_type_host)
        MainWindow.setTabOrder(self.radio_res_type_host, self.radio_res_type_k8s)
        MainWindow.setTabOrder(self.radio_res_type_k8s, self.radio_res_type_swarm)
        MainWindow.setTabOrder(self.radio_res_type_swarm, self.radio_schema_test_single)
        MainWindow.setTabOrder(self.radio_schema_test_single, self.radio_schema_test_four)
        MainWindow.setTabOrder(self.radio_schema_test_four, self.radio_schema_prod_four)
        MainWindow.setTabOrder(self.radio_schema_prod_four, self.radio_schema_custom)
        MainWindow.setTabOrder(self.radio_schema_custom, self.custom_num_validator)
        MainWindow.setTabOrder(self.custom_num_validator, self.custom_num_non_validator)
        MainWindow.setTabOrder(self.custom_num_non_validator, self.custom_num_ops)
        MainWindow.setTabOrder(self.custom_num_ops, self.custom_num_explorer)
        MainWindow.setTabOrder(self.custom_num_explorer, self.custom_num_caserver)
        MainWindow.setTabOrder(self.custom_num_caserver, self.text_6)
        MainWindow.setTabOrder(self.text_6, self.host_address)
        MainWindow.setTabOrder(self.host_address, self.host_sshport)
        MainWindow.setTabOrder(self.host_sshport, self.host_username)
        MainWindow.setTabOrder(self.host_username, self.host_password)
        MainWindow.setTabOrder(self.host_password, self.host_note)
        MainWindow.setTabOrder(self.host_note, self.host_deploy_validator)
        MainWindow.setTabOrder(self.host_deploy_validator, self.host_deploy_nonvalidator)
        MainWindow.setTabOrder(self.host_deploy_nonvalidator, self.host_deploy_ops)
        MainWindow.setTabOrder(self.host_deploy_ops, self.host_deploy_explorer)
        MainWindow.setTabOrder(self.host_deploy_explorer, self.host_deploy_caserver)
        MainWindow.setTabOrder(self.host_deploy_caserver, self.btn_host_add_save)
        MainWindow.setTabOrder(self.btn_host_add_save, self.text_8)
        MainWindow.setTabOrder(self.text_8, self.chain_peer_port)
        MainWindow.setTabOrder(self.chain_peer_port, self.chain_rpc_port)
        MainWindow.setTabOrder(self.chain_rpc_port, self.chain_proxy_app)
        MainWindow.setTabOrder(self.chain_proxy_app, self.chain_home)
        MainWindow.setTabOrder(self.chain_home, self.chain_crypto_sm)
        MainWindow.setTabOrder(self.chain_crypto_sm, self.ops_es_port)
        MainWindow.setTabOrder(self.ops_es_port, self.ops_monitor_home)
        MainWindow.setTabOrder(self.ops_monitor_home, self.ops_kibana_port)
        MainWindow.setTabOrder(self.ops_kibana_port, self.explorer_port)
        MainWindow.setTabOrder(self.explorer_port, self.explorer_home)
        MainWindow.setTabOrder(self.explorer_home, self.settings_rpm_docker_path_browse_btn)
        MainWindow.setTabOrder(self.settings_rpm_docker_path_browse_btn, self.btn_check_start)
        MainWindow.setTabOrder(self.btn_check_start, self.settings_rpm_docker_path)
        MainWindow.setTabOrder(self.settings_rpm_docker_path, self.btn_deployment_start)
        MainWindow.setTabOrder(self.btn_deployment_start, self.btn_next)
        MainWindow.setTabOrder(self.btn_next, self.settings_rpm_ansible_path_browse_btn)
        MainWindow.setTabOrder(self.settings_rpm_ansible_path_browse_btn, self.settings_playbooks_path)
        MainWindow.setTabOrder(self.settings_playbooks_path, self.settings_playbooks_path_browse_btn)
        MainWindow.setTabOrder(self.settings_playbooks_path_browse_btn, self.settings_monitor_path)
        MainWindow.setTabOrder(self.settings_monitor_path, self.settings_monitor_path_browse_btn)
        MainWindow.setTabOrder(self.settings_monitor_path_browse_btn, self.settings_img_node_path)
        MainWindow.setTabOrder(self.settings_img_node_path, self.settings_img_node_path_browse_btn)
        MainWindow.setTabOrder(self.settings_img_node_path_browse_btn, self.text_7)
        MainWindow.setTabOrder(self.text_7, self.btn_prev)
        MainWindow.setTabOrder(self.btn_prev, self.text_2)
        MainWindow.setTabOrder(self.text_2, self.host_info)
        MainWindow.setTabOrder(self.host_info, self.text_0)
        MainWindow.setTabOrder(self.text_0, self.ops_onhosts)
        MainWindow.setTabOrder(self.ops_onhosts, self.btn_host_delete)
        MainWindow.setTabOrder(self.btn_host_delete, self.text_3)
        MainWindow.setTabOrder(self.text_3, self.text_1)
        MainWindow.setTabOrder(self.text_1, self.hosts_list)
        MainWindow.setTabOrder(self.hosts_list, self.text_5)
        MainWindow.setTabOrder(self.text_5, self.explorer_onhosts)
        MainWindow.setTabOrder(self.explorer_onhosts, self.chain_onhosts)
        MainWindow.setTabOrder(self.chain_onhosts, self.caserver_onhosts)
        MainWindow.setTabOrder(self.caserver_onhosts, self.deployment_finished)
        MainWindow.setTabOrder(self.deployment_finished, self.settings_offline_res_path)
        MainWindow.setTabOrder(self.settings_offline_res_path, self.settings_offline_res_path_browse_btn)
        MainWindow.setTabOrder(self.settings_offline_res_path_browse_btn, self.checking_summary)
        MainWindow.setTabOrder(self.checking_summary, self.checking_log)
        MainWindow.setTabOrder(self.checking_log, self.settings_rpm_ansible_path)
        MainWindow.setTabOrder(self.settings_rpm_ansible_path, self.deployment_summary)
        MainWindow.setTabOrder(self.deployment_summary, self.deployment_log)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "TrustChain部署工具"))
        __sortingEnabled = self.nav_process.isSortingEnabled()
        self.nav_process.setSortingEnabled(False)
        item = self.nav_process.item(0)
        item.setText(_translate("MainWindow", "开始"))
        item = self.nav_process.item(1)
        item.setText(_translate("MainWindow", "部署方案"))
        item = self.nav_process.item(2)
        item.setText(_translate("MainWindow", "资源信息"))
        item = self.nav_process.item(3)
        item.setText(_translate("MainWindow", "资源配置"))
        item = self.nav_process.item(4)
        item.setText(_translate("MainWindow", "兼容性检查"))
        item = self.nav_process.item(5)
        item.setText(_translate("MainWindow", "部署"))
        item = self.nav_process.item(6)
        item.setText(_translate("MainWindow", "完成"))
        self.nav_process.setSortingEnabled(__sortingEnabled)
        __sortingEnabled = self.nav_menu.isSortingEnabled()
        self.nav_menu.setSortingEnabled(False)
        item = self.nav_menu.item(0)
        item.setText(_translate("MainWindow", "设置"))
        item = self.nav_menu.item(1)
        item.setText(_translate("MainWindow", "帮助"))
        item = self.nav_menu.item(2)
        item.setText(_translate("MainWindow", "关闭"))
        self.nav_menu.setSortingEnabled(__sortingEnabled)
        self.text_0.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><title>开始</title><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei UI\'; font-size:14px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600; color:#666666;\">开始</span><span style=\" font-size:14px; color:#666666;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">本工具用于快速部署TrustChain及TrustOps平台。 </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:medium; font-weight:600; color:#666666;\">资源：</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">TrustChain可运行在多种不同的环境中。本工具支持如下资源类型：</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" color:#666666;\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px;\">CentOS7主机 </span></li>\n"
"<li style=\" color:#666666;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px;\">K8S集群 </span></li>\n"
"<li style=\" color:#666666;\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px;\">Swarm集群</span></li></ul>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">部署时，请您提供任意一种资源类型的相关信息。 </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:medium; font-weight:600; color:#666666;\">设置：</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">本部署工具支持离线部署，产品组件主要以镜像、二进制等方式提供，可通过“设置”菜单进行配置。 </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:medium; font-weight:600; color:#666666;\">检查：</span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">部署前，工具会进行兼容性检查，检查通过后即可一键部署。 </span></p></body></html>"))
        self.text_1.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><title>部署方案</title><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei UI\'; font-size:14px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600; color:#666666;\">部署方案</span><span style=\" font-size:14px; color:#666666;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">请选择底层资源类型，配置部署规模：</span></p></body></html>"))
        self.resource_type.setTitle(_translate("MainWindow", "资源类型"))
        self.radio_res_type_host.setText(_translate("MainWindow", "CentOS/7主机"))
        self.radio_res_type_k8s.setText(_translate("MainWindow", "Kubernetes集群"))
        self.radio_res_type_swarm.setText(_translate("MainWindow", "Swarm集群"))
        self.deploy_scale.setTitle(_translate("MainWindow", "部署规模"))
        self.radio_schema_test_single.setText(_translate("MainWindow", "[测试]单节点（通常需1主机，单节点链，运维监控等所有组件位于同一节点，仅用于测试）"))
        self.radio_schema_test_four.setText(_translate("MainWindow", "[测试]四节点（通常需5主机，四节点链，运维监控等组件位于单独节点上，多用于测试）"))
        self.radio_schema_prod_four.setText(_translate("MainWindow", "[生产]四节点（通常需7主机，四节点链，运维监控等组件位于三节点cluster，可用于生产）"))
        self.radio_schema_custom.setText(_translate("MainWindow", "自定义组件部署节点数"))
        self.label_4.setText(_translate("MainWindow", "出块节点"))
        self.label_5.setText(_translate("MainWindow", "个，非出块节点"))
        self.label_6.setText(_translate("MainWindow", "个，"))
        self.label_7.setText(_translate("MainWindow", "运维节点"))
        self.label_9.setText(_translate("MainWindow", "个，链浏览器"))
        self.label_2.setText(_translate("MainWindow", "个，"))
        self.label_10.setText(_translate("MainWindow", "CA服务器"))
        self.label_12.setText(_translate("MainWindow", "个。"))
        self.text_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><title>资源信息</title><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei UI\'; font-size:14px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600; color:#666666;\">资源信息</span><span style=\" font-size:14px; color:#666666;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">请配置Docker主机信息，请确保OS为CentOS7，并且网络连接正常。</span></p></body></html>"))
        self.btn_host_add_save.setText(_translate("MainWindow", "添加/保存"))
        self.btn_host_delete.setText(_translate("MainWindow", "删除"))
        self.formGroupBox.setTitle(_translate("MainWindow", "主机信息"))
        self.label_address.setText(_translate("MainWindow", "主机地址"))
        self.host_address.setPlaceholderText(_translate("MainWindow", "IP地址或主机名"))
        self.label_user.setText(_translate("MainWindow", "用户名"))
        self.host_username.setText(_translate("MainWindow", "root"))
        self.label_pass.setText(_translate("MainWindow", "用户密码"))
        self.host_password.setPlaceholderText(_translate("MainWindow", "登录密码"))
        self.label_ssh.setText(_translate("MainWindow", "SSH端口"))
        self.host_sshport.setText(_translate("MainWindow", "22"))
        self.label_note.setText(_translate("MainWindow", "备注"))
        self.host_note.setPlaceholderText(_translate("MainWindow", "便于识别的名字（如“运维节点”）"))
        self.label_services.setText(_translate("MainWindow", "部署内容"))
        self.host_deploy_ops.setText(_translate("MainWindow", "运维监控"))
        self.host_deploy_nonvalidator.setText(_translate("MainWindow", "非出块节点"))
        self.host_deploy_validator.setText(_translate("MainWindow", "出块节点"))
        self.host_deploy_explorer.setText(_translate("MainWindow", "链浏览器"))
        self.host_deploy_caserver.setText(_translate("MainWindow", "CA服务器"))
        self.label_info.setText(_translate("MainWindow", "主机信息"))
        self.text_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><title>资源配置</title><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei UI\'; font-size:14px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600; color:#666666;\">资源配置</span><span style=\" font-size:14px; color:#666666;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">请配置如何部署各节点、运维及监控平台、链浏览器等组件或服务。</span></p></body></html>"))
        self.ops_info.setTitle(_translate("MainWindow", "运维监控"))
        self.label_es_port.setText(_translate("MainWindow", "ES端口"))
        self.ops_es_port.setInputMask(_translate("MainWindow", "D0000"))
        self.ops_es_port.setText(_translate("MainWindow", "9200"))
        self.label_kibana_port.setText(_translate("MainWindow", "Kibana端口"))
        self.ops_kibana_port.setInputMask(_translate("MainWindow", "D0000"))
        self.ops_kibana_port.setText(_translate("MainWindow", "5601"))
        self.label_ops_onhosts.setText(_translate("MainWindow", "所在主机"))
        self.label_es_data.setText(_translate("MainWindow", "监控所在目录"))
        self.ops_monitor_home.setText(_translate("MainWindow", "~/.monitor"))
        self.chain_info.setTitle(_translate("MainWindow", "链节点"))
        self.label_peer_port.setText(_translate("MainWindow", "Peer端口"))
        self.chain_peer_port.setInputMask(_translate("MainWindow", "D0000"))
        self.chain_peer_port.setText(_translate("MainWindow", "26656"))
        self.chain_peer_port.setPlaceholderText(_translate("MainWindow", "IP地址或主机名"))
        self.label_rpc_port.setText(_translate("MainWindow", "RPC端口"))
        self.chain_rpc_port.setInputMask(_translate("MainWindow", "D0000"))
        self.chain_rpc_port.setText(_translate("MainWindow", "26657"))
        self.label_chain_proxy_app.setText(_translate("MainWindow", "proxy_app"))
        self.chain_proxy_app.setText(_translate("MainWindow", "kvstore"))
        self.label_chain_home.setText(_translate("MainWindow", "Home目录"))
        self.chain_home.setText(_translate("MainWindow", "~/.trustchain"))
        self.label_chain_crypto.setText(_translate("MainWindow", "加密类型"))
        self.chain_crypto_sm.setText(_translate("MainWindow", "采用国密"))
        self.label_chain_onhosts.setText(_translate("MainWindow", "所在主机"))
        self.caserver_info.setTitle(_translate("MainWindow", "CA服务器"))
        self.label_caserver_onhosts.setText(_translate("MainWindow", "所在主机"))
        self.explorer_info.setTitle(_translate("MainWindow", "链浏览器"))
        self.label_explorer_port.setText(_translate("MainWindow", "服务端口"))
        self.explorer_port.setInputMask(_translate("MainWindow", "D0000"))
        self.explorer_port.setText(_translate("MainWindow", "8080"))
        self.label_exporer_onhosts.setText(_translate("MainWindow", "所在主机"))
        self.label_explorer_home.setText(_translate("MainWindow", "链浏览器目录"))
        self.explorer_home.setText(_translate("MainWindow", "~/.explorer"))
        self.text_4.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><title>兼容性检查</title><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei UI\'; font-size:14px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600; color:#666666;\">兼容性检查</span><span style=\" font-size:14px; color:#666666;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">检查所提供的资源以及部署方案是否符合部署要求。</span></p></body></html>"))
        self.btn_check_start.setText(_translate("MainWindow", "开始检查"))
        self.label.setText(_translate("MainWindow", "日志："))
        self.text_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><title>部署</title><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei UI\'; font-size:14px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600; color:#666666;\">部署</span><span style=\" font-size:14px; color:#666666;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">根据部署方案及相关配置进行部署。</span></p></body></html>"))
        self.btn_deployment_start.setText(_translate("MainWindow", "开始检查"))
        self.label_3.setText(_translate("MainWindow", "日志："))
        self.text_6.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><title>完成</title><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei UI\'; font-size:14px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600; color:#666666;\">完成</span><span style=\" font-size:14px; color:#666666;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">恭喜，Trust Ops已经成功部署。部署结果如下：</span></p></body></html>"))
        self.deployment_finished.setPlainText(_translate("MainWindow", "- 链节点：\n"
"    ...\n"
"    ...\n"
"\n"
"- 运维管理平台：\n"
"    ...\n"
"    ...\n"
"\n"
"- 用户操作平台：\n"
"    ...\n"
"    ...\n"
"\n"
"- CA节点：\n"
"    ...\n"
"    ..."))
        self.text_8.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><title>设置</title><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei UI\'; font-size:14px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600; color:#666666;\">设置</span><span style=\" font-size:14px; color:#666666;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">主要用于设置离线部署过程中所需的资源。</span></p></body></html>"))
        self.label_offline_res_path.setText(_translate("MainWindow", "离线资源路径(目录)："))
        self.settings_offline_res_path.setText(_translate("MainWindow", "./"))
        self.settings_offline_res_path.setPlaceholderText(_translate("MainWindow", "以下所有资源所在的目录"))
        self.settings_offline_res_path_browse_btn.setText(_translate("MainWindow", "..."))
        self.label_rpm_docker_path.setText(_translate("MainWindow", "docker安装包(tar)："))
        self.settings_rpm_docker_path.setText(_translate("MainWindow", "./rpm-docker.tar.gz"))
        self.settings_rpm_docker_path.setPlaceholderText(_translate("MainWindow", "docker的rpm包及其依赖的相对/绝对路径"))
        self.settings_rpm_docker_path_browse_btn.setText(_translate("MainWindow", "..."))
        self.label_rpm_ansible_path.setText(_translate("MainWindow", "ansible安装包(tar)："))
        self.settings_rpm_ansible_path.setText(_translate("MainWindow", "./rpm-ansible.tar.gz"))
        self.settings_rpm_ansible_path.setPlaceholderText(_translate("MainWindow", "ansible的rpm包及其依赖的相对/绝对路径"))
        self.settings_rpm_ansible_path_browse_btn.setText(_translate("MainWindow", "..."))
        self.label_playbooks_path.setText(_translate("MainWindow", "ansible playbooks(tar)："))
        self.settings_playbooks_path.setText(_translate("MainWindow", "./playbooks.tar.gz"))
        self.settings_playbooks_path.setPlaceholderText(_translate("MainWindow", "ansible playbooks的相对/绝对路径"))
        self.settings_playbooks_path_browse_btn.setText(_translate("MainWindow", "..."))
        self.label_monitor_path.setText(_translate("MainWindow", "监控相关(tar)："))
        self.settings_monitor_path.setText(_translate("MainWindow", "./img-monitor.tar.gz"))
        self.settings_monitor_path.setPlaceholderText(_translate("MainWindow", "监控相关的镜像、compose文件、kibana配置等"))
        self.settings_monitor_path_browse_btn.setText(_translate("MainWindow", "..."))
        self.label_img_node_path.setText(_translate("MainWindow", "链节点相关镜像(tar)："))
        self.settings_img_node_path.setText(_translate("MainWindow", "./img-node.tar"))
        self.settings_img_node_path.setPlaceholderText(_translate("MainWindow", "beats镜像的相对/绝对路径"))
        self.settings_img_node_path_browse_btn.setText(_translate("MainWindow", "..."))
        self.text_7.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><title>帮助</title><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Microsoft YaHei UI\'; font-size:14px; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600; color:#666666;\">帮助</span><span style=\" font-size:14px; color:#666666;\"> </span></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:14px; color:#666666;\">相关内容待补充...</span></p></body></html>"))
        self.btn_prev.setText(_translate("MainWindow", "< 上一步"))
        self.btn_next.setText(_translate("MainWindow", "下一步 >"))
        self.copyright.setText(_translate("MainWindow", "@2018 Trust Chain Technology All Rights Reserved  "))

import chainup.ui.resources_rc
